plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "androidx.navigation.safeargs.kotlin"
    id 'org.jetbrains.kotlin.android'
    id 'com.google.devtools.ksp'
}

android {
    defaultConfig {
        applicationId "com.herry.test"

        compileSdk BUILD_COMPILE_SDK_VERSION as int
        minSdkVersion BUILD_MIN_SDK_VERSION as int
        targetSdkVersion BUILD_TARGET_SDK_VERSION as int

        versionCode 1
        versionName "1.0"

        manifestPlaceholders = [
                resizeableApplication:"false",
                supportSmallScreens:"true",
                supportNormalScreens:"true",
                supportLargeScreens:"true",
                supportXLargeScreens:"true"
        ]
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            minifyEnabled false
        }

        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    flavorDimensions "mode"

    productFlavors {
        phone {
            dimension "mode"
        }

        tablet {
            manifestPlaceholders = [
                    resizeableApplication:"true",
                    supportSmallScreens:"false",
                    supportNormalScreens:"false"
            ]
            dimension "mode"
        }
    }

    viewBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
    }

    namespace 'com.herry.test'

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.14"
    }
}

dependencies {
    api project(path: ':library')
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation "androidx.lifecycle:lifecycle-extensions:2.2.0"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.8.0"

    // constraint layout
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    // rxjava
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation "io.reactivex.rxjava2:rxandroid:2.1.1"

//    implementation 'com.herry.dimensize:dimensize:1.0.0-beta'
    implementation 'com.github.HerryPark:AndroidDimensionSizes:1.0.0-beta'

    // room db
    def room_version = "2.6.1"
    implementation "androidx.room:room-runtime:$room_version"
    ksp "androidx.room:room-compiler:$room_version"

    // glide
    def glide_version = '4.16.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    implementation "com.github.bumptech.glide:annotations:$glide_version"

    // retrofit for networking
    def retrofit_version = "2.9.0"
    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"

    // tensorflow
    implementation 'org.tensorflow:tensorflow-lite:2.13.0'
    implementation 'org.tensorflow:tensorflow-lite-support:0.4.4'

    // cameraX
    def camerax_version = "1.3.3"
    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
    implementation "androidx.camera:camera-video:$camerax_version"

    // compose
    def composeBom = platform('androidx.compose:compose-bom:2024.05.00')
    implementation composeBom
    androidTestImplementation composeBom
    // Material Design 3
    implementation 'androidx.compose.material3:material3'
    // Android Studio Preview support
    implementation 'androidx.compose.ui:ui-tooling-preview'
    debugImplementation 'androidx.compose.ui:ui-tooling'
    // UI Tests
    androidTestImplementation 'androidx.compose.ui:ui-test-junit4'
    debugImplementation 'androidx.compose.ui:ui-test-manifest'
    // Included automatically by material, only add when you need
    // the icons but not the material library (e.g. when using Material3 or a
    // custom design system based on Foundation)
    implementation 'androidx.compose.material:material-icons-core'
    // Optional - Add full set of material icons
    implementation 'androidx.compose.material:material-icons-extended'
    // Optional - Add window size utils
    implementation 'androidx.compose.material3:material3-window-size-class'
    // Optional - Integration with activities
    implementation 'androidx.activity:activity-compose:1.9.0'
    // Optional - Integration with ViewModels
    implementation 'androidx.lifecycle:lifecycle-viewmodel-compose:2.6.1'
    // Optional - Integration with LiveData
    implementation 'androidx.compose.runtime:runtime-livedata'
    // Optional - Integration with RxJava
    implementation 'androidx.compose.runtime:runtime-rxjava2'
}